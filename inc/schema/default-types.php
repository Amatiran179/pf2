<?php
/**
 * Default schema type mapping by context.
 *
 * @package PF2\Schema
 */

if ( ! defined( 'ABSPATH' ) ) {
    exit;
}

if ( ! function_exists( 'pf2_schema_collect_default_types' ) ) {
    /**
     * Append default schema objects based on the current post context.
     *
     * @param array<int, array<string, mixed>> $schemas Current schema list.
     * @param array<string, mixed>             $context Request context.
     * @return array<int, array<string, mixed>>
     */
    function pf2_schema_collect_default_types( $schemas, $context ) {
        $post_id = isset( $context['post_id'] ) ? (int) $context['post_id'] : 0;

        if ( empty( $context['is_singular'] ) || ! $post_id ) {
            return $schemas;
        }

        $post = get_post( $post_id );

        if ( ! $post instanceof \WP_Post ) {
            return $schemas;
        }

        $post_type = get_post_type( $post );

        switch ( $post_type ) {
            case 'post':
                if ( function_exists( 'pf2_schema_build_article' ) ) {
                    $article = pf2_schema_build_article( $post );
                    if ( ! empty( $article ) ) {
                        $article['@type'] = has_category( 'news', $post ) ? 'NewsArticle' : 'BlogPosting';
                        $schemas[]        = pf2_schema_clean( $article );
                    }
                }
                break;

            case 'pf2_product':
                if ( function_exists( 'pf2_schema_build_product' ) ) {
                    $product = pf2_schema_build_product( $post );
                    if ( ! empty( $product ) ) {
                        $schemas[] = pf2_schema_clean( $product );
                    }
                }
                break;

            case 'pf2_portfolio':
                $tourist_enabled = rest_sanitize_boolean( get_post_meta( $post_id, 'pf2_schema_touristattraction_enabled', true ) );

                if ( $tourist_enabled ) {
                    // TouristAttraction schema is generated by extras when enabled.
                    break;
                }

                if ( function_exists( 'pf2_schema_build_tourist_attraction' ) ) {
                    $creative = pf2_schema_build_tourist_attraction( $post );
                    if ( ! empty( $creative ) ) {
                        $schemas[] = pf2_schema_clean( $creative );
                    }
                } else {
                    $schemas[] = pf2_schema_clean(
                        array(
                            '@context'    => 'https://schema.org',
                            '@type'       => 'CreativeWork',
                            'name'        => wp_strip_all_tags( get_the_title( $post ) ),
                            'description' => wp_strip_all_tags( get_the_excerpt( $post ) ),
                            'url'         => esc_url_raw( get_permalink( $post ) ),
                        )
                    );
                }
                break;

            case 'page':
                // WebPage schema is provided globally; nothing additional required.
                break;

            default:
                break;
        }

        if ( is_front_page() || is_home() ) {
            if ( isset( $context['url'] ) && $context['url'] && ! is_array( $context['url'] ) ) {
                $has_webpage = false;

                foreach ( $schemas as $schema ) {
                    if ( ! is_array( $schema ) ) {
                        continue;
                    }

                    $type = isset( $schema['@type'] ) ? (string) $schema['@type'] : '';
                    $url  = isset( $schema['url'] ) ? (string) $schema['url'] : '';

                    if ( 'WebPage' === $type && 0 === strcasecmp( $url, (string) $context['url'] ) ) {
                        $has_webpage = true;
                        break;
                    }
                }

                if ( ! $has_webpage ) {
                    $webpage = array(
                        '@context'    => 'https://schema.org',
                        '@type'       => 'WebPage',
                        'name'        => isset( $context['post_title'] ) ? $context['post_title'] : get_bloginfo( 'name' ),
                        'description' => isset( $context['post_excerpt'] ) ? $context['post_excerpt'] : get_bloginfo( 'description', 'display' ),
                        'url'         => $context['url'],
                    );

                    $schemas[] = pf2_schema_clean( $webpage );
                }
            }
        }

        return $schemas;
    }
}

add_filter( 'pf2_schema_collect', 'pf2_schema_collect_default_types', 12, 2 );
